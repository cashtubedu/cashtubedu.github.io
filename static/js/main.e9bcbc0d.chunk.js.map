{"version":3,"sources":["components/Login.jsx","components/Register.jsx","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","type","primary","main","secondary","useStyles","makeStyles","root","backgroundColor","height","color","paddingTop","breakpoints","down","fontSize","submain","form","link","textDecoration","submit","marginTop","Login","classes","useState","email","password","showPassword","values","setValues","emailerror","setEmailError","passworderror","setPasswordError","handleChange","event","currentTarget","id","value","test","target","className","Typography","align","variant","ThemeProvider","onSubmit","preventDefault","Container","maxWidth","TextField","error","margin","label","autoComplete","onChange","helperText","length","required","autoFocus","fullWidth","InputProps","input","multilineColor","endAdornment","IconButton","aria-label","onClick","Visibility","VisibilityOff","Button","Grid","container","style","item","xs","to","questions","events","signup","padding","paper","spacing","textAlign","text","name","formControl","width","fname","lname","confirm","regid","rollno","year","division","answers","setAnswers","ev","setEv","flag","setFlag","fnameerror","setFNameError","lnameerror","setLNameError","confirmerror","setConfirmError","regiderror","setRegidError","signuperror","setSignupError","rollerror","setRollError","divisionerror","setDivisionError","tentherror","setTenthError","physicserror","setPhysicsError","chemistryerror","setChemistryError","mathserror","setMathError","strongRegex","RegExp","slice","sm","FormControl","InputLabel","Select","MenuItem","map","question","index","TextareaAutosize","rowsMin","placeholder","newAnswer","paddingBottom","FormControlLabel","control","Checkbox","newEv","checked","App","exact","path","component","Register","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e9bcbc0d.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport { makeStyles, Typography, TextField, IconButton,Button, Container, Grid } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#598BFF',\n    },\n    secondary: {\n      main: '#8F9BB3',\n    },\n  },\n});\n\nconst useStyles = makeStyles(theme => ({\n    root : {\n        backgroundColor: '#1A2138',\n        height: '30vh',\n    },\n    main : {\n        color:'#fff', \n        paddingTop:'4%',\n        [theme.breakpoints.down('md')] : {\n            fontSize: '70px',\n            paddingTop: '12%'\n        }\n    },\n    submain : {\n        color:'#fff',\n        [theme.breakpoints.down('md')] : {\n            fontSize: '25px',\n        }\n    },\n    form : {\n        backgroundColor: '#222B45',\n        height: '59.9vh',\n        paddingTop: '5%',\n        [theme.breakpoints.down('lg')] : {\n            height: '67vh'\n        }\n    },\n    link: {\n        textDecoration: 'none',\n        color: '#8F9BB3'\n    },\n    submit: {\n        marginTop: '5%',\n    }\n}));\n\nconst Login = () => {\n    const classes = useStyles();\n    const [values,setValues] = useState({\n        email: '',\n        password: '',\n        showPassword : false,\n    });\n    const [emailerror, setEmailError] = useState(false);\n    const [passworderror, setPasswordError] = useState(false);\n    // const [loginerror, setLoginError] = useState(false);\n\n    const handleChange = (event) => {\n        setValues({...values, [event.currentTarget.id]: event.currentTarget.value})\n        if(event.currentTarget.id === 'email') {\n            setEmailError(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(event.currentTarget.value));\n        }\n        if(event.currentTarget.id === 'password') {\n            setPasswordError(event.target.value === '');\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if(!emailerror && !passworderror) {\n            // axios({\n            //     method:'post',\n            //     headers : {\n            //         \"Access-Control-Allow-Origin\": \"*\",\n            //         \"Content-Type\":\"application/json\"\n            //     },\n            //     data : {\n            //         email : values.email,\n            //         password : values.password\n            //     },\n            //     url: '/api/login/',\n            // })\n            // .then((response) => {\n            //     let date = new Date();\n            //     date.setTime(date.getTime() +  180 * 60 * 1000);     // 180 minutes\n            //     let expiration = `expires ${date.toUTCString()}`;\n            //     document.cookie = `usertoken=${response.data.token}; expires=${expiration} ;path=/`; \n            //     setLoginError(false);\n            //     history.push('/dashboard');\n            // })\n            // .catch((error) => {\n            //     setLoginError(true);\n            // })\n        }\n    }\n    return (\n        <body className=\"body\">\n        <div className={classes.root}>\n            <Typography align=\"center\" variant=\"h1\" className={classes.main}>AIS</Typography>\n            <Typography align=\"center\" variant=\"h4\" className={classes.submain}>Sign in to your account</Typography>\n        </div>\n        \n        <ThemeProvider theme={theme}>\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <Container maxWidth='sm'>\n                        <TextField\n                            error={emailerror}\n                            variant=\"filled\"\n                            margin=\"normal\"\n                            id=\"email\"\n                            label=\"Email\"\n                            type=\"email\"\n                            autoComplete=\"Email\"\n                            onChange={handleChange}\n                            helperText= { emailerror ? (values.email.length ? \"Invalid Email Address\" : \"This is a required field!\") : null}\n                            required autoFocus fullWidth\n                            InputProps={{\n                                classes: {\n                                    input: classes.multilineColor\n                                }\n                            }}\n                        />\n                        <TextField\n                            error={passworderror}\n                            variant=\"filled\"\n                            margin=\"normal\"\n                            label=\"Password\"\n                            id=\"password\"\n                            type = { values.showPassword ? 'text': 'password'}\n                            onChange={handleChange}\n                            helperText = { passworderror ? \"This is a required field!\" : null}\n                            InputProps = {{\n                                endAdornment: \n                                    <IconButton \n                                        aria-label= \"toggle password visibility\" \n                                        onClick={() => setValues({...values, showPassword:  !values.showPassword})}\n                                    >\n                                        { values.showPassword ? <Visibility/ > : <VisibilityOff />}\n                                    </IconButton>\n\n                            }}\n                            required fullWidth            \n                        />\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            fullWidth\n                            className={classes.submit}\n                        >\n                        Log In\n                        </Button>\n                        <Grid container style={{paddingTop:'2%'}}>\n                            <Grid item xs>\n                            <Link to=\"/register\" variant=\"body2\" className={classes.link}>\n                                Forgot password?\n                            </Link>\n                            </Grid>\n                            <Grid item>\n                            <Link to='/register' className={classes.link}>\n                                Don't have an account?\n                            </Link>\n                            </Grid>\n                        </Grid>\n                </Container>   \n            </form>\n        </ThemeProvider>\n        </body>\n    )\n}\n\nexport default Login;","import React, {useState} from 'react'\nimport { makeStyles, Typography, TextField, IconButton, Button, Grid, Container, FormControl, Select, MenuItem, InputLabel, TextareaAutosize, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\n\nconst questions = [\n    \"Tell me about a time you missed (or almost missed) a deadline. How did you react when you realized you were falling behind? What did that experience teach you?\",\n    \"What drives you in your professional life?\",\n    \"What motivates you?\",\n    \"Let’s pretend you were required to attend a cocktail party with 75 strangers, how does that make you feel?\",\n    \"What makes you unique?\",\n    \"If you could change one thing about your personality at the snap of your fingers what would it be and why?\",\n    \"Do you prefer working in a team or on your own? Why?\",\n\n]\n\nconst academic = ['tenth', 'physics', 'chemistry', 'maths', 'mooc', 'domain']\n\nconst events = [\n    'CLASH - Coding event with a round of perplexing MCQs followed by a round of time-bound coding challenges.(Solving the problems).',\n    'Reverse Coding - A coding competition to test compilation of algorithms and conceptual understanding of programming languages.(Solving the problems).',\n    'Datawiz - Find and analyse inherent patterns in datasets provided to test your machine learning and data analytics skills and make predictions with the help of the models that you make.',\n    'Web Weaver - A competition to make aesthetically pleasing and using friendly websites in order to keep visitors engaged online.',\n    'Xodia - A battle in which you code your bot to fight till the end in an intense programming competition.',\n    'Cretronix - Clear a test where you demonstrate your knowledge in the field of electronics, physics and logical ability to build a circuit by interpreting the hints provided.',\n    'Bug Off - A competition where the participants are expected to remove the bugs from the given set of codes and achieve a desired output.',\n    'Just Coding - A competition where the participants have to write the correct and efficient codes for the given set of problem statements.',\n    'Code buddy - A coding competition based on understanding your buddy code and continuing it with speed to get the desired output',\n    'Recode it - You have the output and that is the problem. Rack your brain and develop logic to generate the given output.',\n    'Web/Android Dev - A platform to showcase your talent by making creative and unique websites or android applications in accordance with the provided problem statements.',\n    'Dataquest - Participants are tested upon their data science and machine learning skills to optimise the given metric for the given data set.',\n]\n\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#598BFF',\n    },\n    secondary: {\n      main: '#8F9BB3',\n    },\n  },\n});\n\nconst useStyles = makeStyles(theme => ({\n    root : {\n        backgroundColor: '#1A2138',\n        height: '30vh',\n    },\n    main : {\n        color:'#fff', \n        paddingTop:'4%',\n        [theme.breakpoints.down('md')] : {\n            fontSize: '70px',\n            paddingTop: '12%'\n        }\n    },\n    submain : {\n        color:'#fff',\n        [theme.breakpoints.down('md')] : {\n            fontSize: '25px',\n        }\n    },\n    form : {\n        backgroundColor: '#222B45',\n        height: '350vh',\n        paddingTop: '3%',\n        [theme.breakpoints.down('md')] : {\n            height: '500vh',\n        }\n    },\n    signup : {\n        padding: '2% 0% 4%',\n        [theme.breakpoints.down('sm')] : {\n            fontSize: '20px'\n        }\n    },\n    link: {\n        textDecoration: 'none',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    name: {\n        [theme.breakpoints.down('sm')] : {\n            margin: '0px'\n        }\n    },\n    formControl: {\n        marginTop: '7.5%',\n        width:'100%',\n    },\n    submit : {\n        marginTop: '3%',\n        [theme.breakpoints.down('sm')] : {\n            marginTop: '4%'\n        }\n    }\n}));\n\nconst Login = () => {\n    const classes = useStyles();\n    const dummy = null;\n    const [values, setValues] = useState({\n        email: '',\n        fname: '',\n        lname: '',\n        password: '',\n        confirm: '',\n        regid: '',\n        rollno: '',\n        year : 'FE',\n        division : '',\n        showPassword: false,\n    });\n    const [academic, setAcademic] = useState([0,0,0,0,'','']);\n    const [answers, setAnswers] = useState(['','','','','','','']);\n    const [ev,setEv] = useState([false,false,false,false,false,false,false,false,false,false,false,false])\n    const [flag, setFlag] = useState(true);\n    const [fnameerror, setFNameError] = useState(false);\n    const [lnameerror, setLNameError] = useState(false);\n    const [emailerror, setEmailError] = useState(false);\n    const [passworderror, setPasswordError] = useState(false);\n    const [confirmerror, setConfirmError] = useState(false);\n    const [regiderror, setRegidError] = useState(false);\n    const [signuperror, setSignupError] = useState(false);\n    const [rollerror, setRollError] = useState(false);\n    const [divisionerror, setDivisionError] = useState(false);\n    const [tentherror, setTenthError] = useState(false);\n    const [physicserror, setPhysicsError] = useState(false);\n    const [chemistryerror, setChemistryError] = useState(false);\n    const [mathserror, setMathError] = useState(false);\n    const handleChange = (event) => {\n        setValues({...values, [event.target.id]: event.target.value})\n        \n        \n        setSignupError(false);\n        \n        if(event.currentTarget.id === 'fname') {\n            setFNameError(event.target.value === '');\n        }\n        if(event.currentTarget.id === 'lname') {\n            setLNameError(event.target.value === '');\n        }\n        if(event.currentTarget.id === 'email') {\n            setEmailError(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(event.currentTarget.value));\n        }\n        if(event.currentTarget.id === 'password') {\n            var strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\n            setPasswordError(!strongRegex.test(event.target.value));\n        }\n        if(event.currentTarget.id === 'confirm') {\n            setConfirmError(values.password !== event.target.value);\n        }\n        if(event.currentTarget.id === 'regid') {\n            let value = event.target.value;\n            setRegidError(true);\n            if ((value.slice(0,3) === 'I2K' || value.slice(0,3) === 'C2K' || value.slice(0,3) === 'E2K') && value.length === 11)  {\n                setRegidError(false);\n            }\n        }\n        if (event.currentTarget.id === 'rollno') {\n            setRollError(false);\n            setRollError((!/^[0-9]*$/i.test(event.target.value)) || event.target.value.length !== 5)\n        }\n        if (event.currentTarget.id === 'division' ) {\n            setDivisionError((!/^[0-9]*$/i.test(event.target.value)) || event.target.value.length > 2)\n        }\n        if(event.currentTarget.id === 'tenth'){\n            setTenthError((!/^[0-9]*$/i.test(event.target.value)) || event.target.value.length > 3 || event.target.value > 500)\n        }  \n        if(event.currentTarget.id === 'physics'){\n            setPhysicsError((!/^[0-9]*$/i.test(event.target.value)) || event.target.value.length > 3 || event.target.value > 100)\n        }  \n        if(event.currentTarget.id === 'chemistry'){\n            setChemistryError((!/^[0-9]*$/i.test(event.target.value)) || event.target.value.length > 3 || event.target.value > 100)\n        }\n        if(event.currentTarget.id === 'maths') {\n            setMathError((!/^[0-9]*$/i.test(event.target.value)) || event.target.value.length > 3 || event.target.value > 100)\n        }\n        if(event.currentTarget.id === 'year') {\n            if(event.target.value === 'FE') {\n                setFlag(true);\n            }\n            else {\n                setFlag(false);\n            }\n            setValues({...values, year:event.target.value})\n        }\n        // if(event.currentTarget.id === '')\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if(!emailerror && !passworderror && !confirmerror && !fnameerror && !lnameerror) {\n            // axios({\n            //     method:'post',\n            //     headers : {\n            //         \"Access-Control-Allow-Origin\": \"*\",\n            //         \"Content-Type\":\"application/json\"\n            //     },\n            //     data : {\n            //         first_name: values.fname,\n            //         last_name: values.lname,\n            //         email: values.email,\n            //         password: values.password,\n            //         city: values.city,\n            //         state: values.state,\n            //         twitter: values.twitter,\n            //     },\n            //     url: '/api/register/',\n            // })\n            // .then(response => {\n            //     let date = new Date();\n            //     date.setTime(date.getTime() +  180 * 60 * 1000);     // 180 minutes\n            //     let expiration = `expires ${date.toUTCString()}`;\n            //     document.cookie = `usertoken=${response.data.token}; expires=${expiration} ;path=/`; \n            //     setSignupError(false);\n            //     history.push('/dashboard');\n            // })\n            // .catch(() => {\n            //     setSignupError(true);\n            // })\n        }\n    }\n    return (\n        <>\n        <div className={classes.root}>\n            <Typography align=\"center\" variant=\"h1\" className={classes.main}>AIS</Typography>\n            <Typography align=\"center\" variant=\"h4\" className={classes.submain}>Create your account</Typography>\n        </div>\n        <ThemeProvider theme={theme}>\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <div>\n                    <Link to=\"/\" className={classes.link}>\n                        <Typography variant=\"h5\" color=\"secondary\" align=\"center\" className={classes.signup}>Already have an account? Login Here!</Typography>\n                    </Link>\n                </div>\n                <Container maxWidth='md'>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                className={classes.name}\n                                error={fnameerror}\n                                variant=\"filled\"\n                                margin=\"normal\"\n                                id=\"fname\"\n                                label=\"First Name\"\n                                type=\"text\"\n                                autoComplete=\"First Name\"\n                                onChange={handleChange}\n                                helperText={fnameerror ? \"This is a required field!\" : null}\n                                autoFocus required fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                className={classes.name}\n                                error={lnameerror}\n                                variant=\"filled\"\n                                margin=\"normal\"\n                                id=\"lname\"\n                                label=\"Last Name\"\n                                type=\"text\"\n                                autoComplete=\"Last Name\"\n                                onChange={handleChange}\n                                helperText={lnameerror ? \"This is a required field!\" : null}\n                                required fullWidth\n                            />\n                        </Grid> \n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"email\"\n                                variant=\"filled\"\n                                label=\"Email Address\"\n                                onChange={handleChange}\n                                error={emailerror || signuperror}\n                                helperText={emailerror ? (values.email.length ? \"Invalid email ID\" : \"Email Address required \") : null}\n                                required fullWidth\n                            />\n                        </Grid> \n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"filled\"\n                                label=\"Password\"\n                                type = { values.showPassword ? 'text': 'password'}\n                                id=\"password\"\n                                onChange={handleChange}\n                                helperText = {passworderror ? \n                                            values.password.length ? \n                                            \"Password must have atleast 8 characters with 1 small letter, capital letter, number and symbol\":\"Password is required\":null}\n                                error={passworderror}\n                                InputProps = {{\n                                endAdornment: \n                                    <IconButton \n                                        aria-label= \"toggle password visibility\" \n                                        onClick={() => setValues({...values, showPassword:  !values.showPassword})}\n                                    >\n                                        { values.showPassword ? <Visibility/ > : <VisibilityOff />}\n                                    </IconButton>\n\n                                }}\n                                required fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"filled\"\n                                label=\"Confirm Password\"\n                                type = { values.showPassword ? 'text': 'password'}\n                                id=\"confirm\"\n                                onChange={handleChange}\n                                helperText= {\n                                    confirmerror ? (values.confirm.length ? \"Passwords do not match\" : \"Confirm password is required\") : null\n                                }\n                                error={confirmerror}\n                                InputProps = {{\n                                endAdornment: \n                                    <IconButton \n                                        aria-label= \"toggle password visibility\" \n                                        onClick={() => setValues({...values, showPassword:  !values.showPassword})}\n                                    >\n                                        { values.showPassword ? <Visibility/ > : <VisibilityOff />}\n                                    </IconButton>\n\n                                }}\n                                required fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <TextField\n                                error={regiderror}\n                                variant=\"filled\"\n                                margin=\"normal\"\n                                id=\"regid\"\n                                label=\"Registration ID\"\n                                type=\"text\"\n                                autoComplete=\"Registration ID\"\n                                onChange={handleChange}\n                                helperText={regiderror ? (values.regid.length ? \"Invalid Registration ID\" : \"Registration ID required \") : null}\n                                required fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <TextField\n                                error={rollerror}\n                                variant=\"filled\"\n                                margin=\"normal\"\n                                id=\"rollno\"\n                                label=\"Roll Number\"\n                                type=\"text\"\n                                autoComplete=\"Roll Number\"\n                                onChange={handleChange}\n                                helperText={rollerror ? \"Invalid roll number\" : null}\n                                required fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel id=\"demo-controlled-open-select-label\">  Select Year</InputLabel>\n                                    <Select\n                                        variant=\"filled\"\n                                        id=\"year\"\n                                        onChange={handleChange}\n                                    >\n                                        <MenuItem id=\"year\" value='FE'>FE</MenuItem>\n                                        <MenuItem id=\"year\" value='SE'>SE</MenuItem>\n                                        <MenuItem id=\"year\" value='TE'>TE</MenuItem>\n                                        <MenuItem id=\"year\" value='BE'>BE</MenuItem>\n                                    </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <TextField\n                                error={divisionerror}\n                                variant=\"filled\"\n                                margin=\"normal\"\n                                id=\"division\"\n                                label=\"Division\"\n                                type=\"text\"\n                                autoComplete=\"Division\"\n                                onChange={handleChange}\n                                helperText={divisionerror ? \"Invalid division\" : null}\n                                required fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <TextField\n                                variant=\"filled\"\n                                margin=\"normal\"\n                                id=\"tenth\"\n                                label=\"Tenth score (out of 500)\"\n                                type=\"text\"\n                                onChange={handleChange}\n                                error={tentherror}\n                                helperText={tentherror ? \"Invalid marks\" : null}\n                                required fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <TextField\n                                variant=\"filled\"\n                                margin=\"normal\"\n                                id=\"physics\"\n                                label=\"12th Physics marks\"\n                                type=\"text\"\n                                onChange={handleChange}\n                                error={physicserror}\n                                helperText={physicserror ? \"Invalid marks\" : null}\n                                required fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <TextField\n                                variant=\"filled\"\n                                margin=\"normal\"\n                                id=\"chemistry\"\n                                label=\"12th Chemistry marks\"\n                                type=\"text\"\n                                onChange={handleChange}\n                                error={chemistryerror}\n                                helperText={chemistryerror ? \"Invalid marks\" : null}\n                                required fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <TextField\n                                variant=\"filled\"\n                                margin=\"normal\"\n                                id=\"maths\"\n                                label=\"12th Maths marks\"\n                                type=\"text\"\n                                onChange={handleChange}\n                                error={mathserror}\n                                helperText={mathserror ? \"Invalid marks\" : null}\n                                required fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                className={classes.name}\n                                variant=\"filled\"\n                                margin=\"normal\"\n                                id=\"mooc\"\n                                label=\"Online MOOCs completed/ongoing (optional): \"\n                                type=\"text\"\n                                onChange={handleChange}\n                                fullWidth\n                            />\n                        </Grid> \n                        <Grid item xs={12}>\n                            <TextField\n                                className={classes.name}\n                                variant=\"filled\"\n                                margin=\"normal\"\n                                id=\"domain\"\n                                label=\"A domain you have keen interest in (optional): \"\n                                type=\"text\"\n                                onChange={handleChange}\n                                fullWidth\n                            />\n                        </Grid>\n                        { questions.map((question,index) => {\n                            return (\n                                <Grid item xs = {12}>\n                                    <Typography color=\"secondary\">\n                                    { index + 1 }. {question}\n                                    </Typography>\n                                    <TextareaAutosize \n                                        style={{ padding: '2% 2% 0%',marginTop: '1.5%',width:'95%', backgroundColor: '#1A2138', color:'#fff' }}\n                                        aria-label=\"minimum height\" \n                                        rowsMin={3} \n                                        id={`answer${index+1}`}\n                                        placeholder=\"Enter your answer here\" \n                                        required\n                                        onChange={event=> {\n                                            let newAnswer = [...answers];\n                                            newAnswer[index] = event.target.value;\n                                            setAnswers(newAnswer);\n                                        }}\n                                    />\n                                </Grid>\n                            )\n                        })}\n                        { flag ? \n                            <>\n                            <Typography color=\"secondary\" align=\"center\" variant=\"h5\" style={{paddingBottom:'2%'}}>Select the events you found interesting from Credenz and Pulzion:</Typography>\n                            {events.map((event,index) => {\n                                return (\n                                    <Grid item xs={12}>\n                                    <FormControlLabel\n                                        \n                                        control={\n                                                <Checkbox \n                                                    name={event} \n                                                    color=\"primary\" \n                                                    onChange={event => {\n                                                        let newEv = [...ev];\n                                                        newEv[index] = event.target.checked;\n                                                        setEv(newEv);\n                                                    }}       \n                                                />\n                                                }\n                                        label={<Typography color=\"secondary\">{event}</Typography>}\n                                        id={`event${index}`}\n                                        \n                                    />\n                                    </Grid>\n    \n                                )\n                            })} \n                            </>\n                            : \n                                null\n                        }\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        fullWidth\n                        className={classes.submit}\n                    >\n                    Register\n                    </Button>\n                </Container>\n            </form>    \n        </ThemeProvider>\n        </>\n    )\n}\n\nexport default Login;","import React from 'react';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Login from './components/Login';\nimport Register from './components/Register'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path='/' component={Login} />\n            <Route exact path='/register' component={Register} />\n          </Switch>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}